package main

templ BaseView(title string) {
	<!DOCTYPE html>
	<html>
		<head>
			<title>{ title }</title>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width,initial-scale=1"/>
			<link rel="stylesheet" href="/98css/98.css"/>
			<script src="https://unpkg.com/htmx.org@1.9.10"></script>
			<script src="https://unpkg.com/htmx.org/dist/ext/sse.js"></script>
			<style type="text/css">
				html {
					background-color: #008080;
				}
				body {
					font-family: "Pixelated MS Sans Serif", Arial;
					margin: 0;
					padding: 0;
					min-height: 100vh;
					display: flex;
					flex-direction: column;
				}
				main {
					margin: auto;
				}
				.window-body {
					display: flex;
					flex-direction: column;
					gap: 4px;
				}
				.chat-window {
					width: 100%;
					max-width: 600px;
				}
				.chat-messages {
				}
				.chat-form {
					display: flex;
					flex-direction: column;
					gap: 8px;
				}
				.chat-form input {
					flex-grow: 1;
				}
				.chat-form button {
					margin-left: auto;
				}
				.group-header {
					display: flex;
					align-items: center;
					gap: 4px;
				}
				.status-bar-field {
					flex-basis: 100%;
				}
			</style>
		</head>
		<body>
			{ children... }
		</body>
	</html>
}

templ IndexView() {
	@BaseView("Chat with a Fuse!") {
		<main>
			<h2>Chat with a Fuse!</h2>
			<p>
				Each chat has a fuse that counts down.
				If the fuse runs out, the chat closes and deletes itself.
				Writing a message to the chat resets the fuse.
			</p>
			<form action="/new">
				<button type="submit">Create New Chat</button>
			</form>
		</main>
	}
}

templ WindowView(title string) {
	@BaseView(title) {
		<main class="window chat-window">
			<div class="title-bar">
				<div class="title-bar-text">{ title }</div>
				<div class="title-bar-controls">
					<form action="/">
						<button aria-label="Close" type="submit"></button>
					</form>
				</div>
			</div>
			<div class="window-body">
				{ children... }
			</div>
		</main>
	}
}

templ ChatEndView() {
	@WindowView("Chat Ended") {
		<p>This Chat has ended.</p>
		<div style="display: flex;justify-content: flex-end;gap: 4px;">
			<form action="/">
				<button type="submit">Return to Home</button>
			</form>
			<form action="/new">
				<button type="submit">Create New Chat</button>
			</form>
		</div>
	}
}

templ ChatView(c *Chat) {
	@WindowView("Go Chat!") {
		<fieldset>
			<legend>
				<div class="group-header">
					<img src="/98css/address_book_pad_users.png" alt="" width="20" height="20"/>
					Invite Others
				</div>
			</legend>
			<input type="text" value={ c.URL() } hx-on:click="this.select()" style="width:100%;" readonly/>
		</fieldset>
		<fieldset>
			<legend>
				<div class="group-header">
					<img src="/98css/network_normal_two_pcs-4.png" alt="" width="20" height="20"/>
					Messages
				</div>
			</legend>
			<div
				style="height: 360px;padding: 4px;"
				class="sunken-panel chat-messages"
				hx-ext="sse"
				sse-connect={ "/c/" + c.id + "/sse" }
				sse-swap="message"
				hx-swap="beforeend"
			>
				<div hx-get="/end" hx-trigger="sse:end" hx-swap="none"></div>
			</div>
		</fieldset>
		<form method="post" hx-post hx-on::after-request="this.reset()" autocomplete="off">
			<fieldset>
				<legend id="message-label">
					<div class="group-header">
						<img src="/98css/envelope_closed-0.png" alt="" width="20" height="20"/>
						New Message
					</div>
				</legend>
				<div class="chat-form">
					<input
						type="text"
						name="message"
						aria-labelledby="message-label"
						required
					/>
					<button type="submit">Send</button>
				</div>
			</fieldset>
		</form>
		@ChatStatusView(c)
	}
}

templ MessageView(m *Message, isAuthor bool) {
	<div data-author?={ isAuthor } style="margin-top: 4px;">
		<span style="font-weight:bold;">{ m.client.Name }: </span>
		<span>{ m.text }</span>
	</div>
}

templ ChatStatusView(c *Chat) {
	<div
		class="status-bar"
		hx-get={ "/c/" + c.id + "/status" }
		hx-trigger="every 1s"
		hx-swap="outerHTML"
		hx-target="this"
	>
		<p class="status-bar-field">{ c.TimeRemaining() } </p>
		<p class="status-bar-field">{ c.Connections() }</p>
		<p class="status-bar-field">{ c.Age() }</p>
	</div>
}
